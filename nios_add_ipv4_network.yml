---
- name: Add ipv4 network to NIOS
  hosts: nios
  #connection: local
  gather_facts: false
 
  collections:
    - infoblox.nios_modules

  vars:
    cidr: 24
    parent_container: 10.0.0.0/16
    start_dhcp_range: 129
    end_dhcp_range: 254
    region: North America
    country: USA
    state: CA

  
  tasks:
        
    - name: RETURN NEXT AVAILABLE NETWORK
      set_fact:
        networkaddr: "{{ lookup('nios_next_network', parent_container, cidr=cidr, provider=nios_provider) }}"
     
         
    - name: CREATE JSON FILE FOR NEW NETWORK
      template:
        src: templates/new_network.j2
        dest: /tmp/new_network.json
      delegate_to: localhost
 

    - name: CREATE NETWORK OBJECT AND ASSIGN GRID MEMBER
      uri:
        url: https://{{ nios_provider.host }}/wapi/v{{ nios_provider.wapi_version }}/network
        method: POST
        user: "{{ nios_provider.username }}" 
        password: "{{ nios_provider.password }}"
        body: "{{ lookup('file','/tmp/new_network.json') }}"
        body_format: json
        status_code: 201
        validate_certs: false
 
    - name: CREATE JSON FILE FOR NEW DCHP RANGE
      template:
        src: templates/new_lan_range.j2
        dest: /tmp/new_lan_range.json

    - name: CREATE DHCP RANGE FOR NEW NETWORK
      uri:
        url: https://{{ nios_provider.host }}/wapi/v{{ nios_provider.wapi_version }}/range
        method: POST
        user: "{{ nios_provider.username }}" 
        password: "{{ nios_provider.password }}"
        body: "{{ lookup('file','/tmp/new_lan_range.json') }}"
        body_format: json
        status_code: 201
        validate_certs: false
     
    - name: UPDATE NEW NETWORK
      nios_network:
        network: "{{ item }}"
        comment: Added from Ansible
        extattrs:
          Region: "{{ region }}"
          Country: "{{ country }}"
          State: "{{ state }}"
        options:
          - name: domain-name
            value: example.com
          - name: routers
            value: "{{ item | ipaddr('1') | ipaddr('address') }}"
        state: present
        provider: "{{ nios_provider }}"
      loop: "{{ networkaddr }}"
  
    - name: RESTART DHCP SERVICE
      uri:
        url: >
             https://{{ nios_provider.host }}/wapi/v{{ nios_provider.wapi_version }}/grid/b25lLmNsdXN0ZXIkMA:Infoblox?_function=restartservices
        method: POST
        user: "{{ nios_provider.username }}" 
        password: "{{ nios_provider.password }}"
        body: "{{ lookup('file','restart_dhcp_service.json') }}"
        body_format: json
        status_code: 200
        validate_certs: false




    



    
